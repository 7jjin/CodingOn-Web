{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\github\\\\CodingOn-Web\\\\0928_practice\\\\todo_client\\\\src\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputTodo() {\n  _s();\n  const [inputTodo, setInputTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: 'http://localhost:8000/todos'\n      });\n      setTodoList(res.data.data);\n    };\n    getData();\n  }, []);\n  const AddTodo = async () => {\n    const newTodo = {\n      title: inputTodo,\n      done: false\n    };\n    setInputTodo('');\n    const postData = async () => {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:8000/todo',\n        data: newTodo\n      });\n      setTodoList([...todoList, res.data.data]);\n      // 여기서 자꾸 리스트가 업데이트 안돼는 오류가 있었는데 알고 보니 컨트롤러에서 데이터를 안넘겨주고 있었음... 실환가..\n    };\n\n    postData();\n  };\n\n  // 체크박스 on/off\n  const toggleTodo = id => {\n    setTodoList(todoList.map(todo => {\n      // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\n      return todo.id === id ? {\n        ...todo,\n        done: !todo.done\n      } : todo;\n    }));\n  };\n\n  //   선택된 체크박스만 삭제\n  const removeTodo = id => {\n    const deleteData = async () => {\n      const res = await axios({\n        method: 'DELETE',\n        url: `http://localhost:8000/todo/:${id}`,\n        data: {\n          id: Number(id)\n        }\n      });\n      // 여기는 왜 res.data로 받아야 하고 위에 모든 데이터를 가져올 때는 res.data.data를 가져와야 하지..\n      setTodoList(res.data);\n    };\n    deleteData();\n  };\n\n  //   const updateTodoTitle = (id, newTitle) => {\n  //     const patchData = async () => {\n  //       const updatedTodoList = todoList.map((todo) => {\n  //         if (todo.id === id) {\n  //           return { ...todo, title: newTitle };\n  //         }\n  //         return todo;\n  //       });\n  //       setTodoList(updatedTodoList);\n  //       const res = await axios({\n  //         method: 'PATCH',\n  //         url: `http://localhost:8000/todo/:${id}`,\n  //         data: {\n  //           title: newTitle,\n  //           id: Number(id),\n  //         },\n  //       });\n  //       console.log(res.data);\n  //     };\n  //   };\n  const updateTodoTitle = async (id, newTitle) => {\n    const res = await axios({\n      method: 'PATCH',\n      url: `http://localhost:8000/todo/:${id}`,\n      data: {\n        title: newTitle,\n        id: Number(id)\n      }\n    });\n    const updatedTodoList = todoList.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          title: newTitle\n        };\n      }\n      return todo;\n    });\n    setTodoList(updatedTodoList);\n  };\n  const handleInputKeyDown = (e, id, newTitle) => {\n    if (e.key === 'Enter') {\n      updateTodoTitle(id, newTitle);\n      setTodoList(todoList.map(todo => {\n        return todo.id === id ? {\n          ...todo,\n          done: false\n        } : todo;\n      }));\n      alert('업데이트 되었습니다.');\n      setTodoList(doneFalse);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputTodo,\n      onChange: e => setInputTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.done,\n            onChange: () => toggleTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), todo.done === true ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.title,\n            onChange: e => updateTodoTitle(todo.id, e.target.value),\n            onKeyDown: e => handleInputKeyDown(e, todo.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.title,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTodo(todo.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputTodo, \"TOcmzs9u7mZzk469sMLH26rcM+o=\");\n_c = InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InputTodo","_s","inputTodo","setInputTodo","todoList","setTodoList","getData","res","method","url","data","AddTodo","newTodo","title","done","postData","toggleTodo","id","map","todo","removeTodo","deleteData","Number","updateTodoTitle","newTitle","updatedTodoList","handleInputKeyDown","e","key","alert","doneFalse","children","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","onKeyDown","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/82106/Desktop/github/CodingOn-Web/0928_practice/todo_client/src/InputTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const AddTodo = async () => {\r\n    const newTodo = {\r\n      title: inputTodo,\r\n      done: false,\r\n    };\r\n    setInputTodo('');\r\n\r\n    const postData = async () => {\r\n      const res = await axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:8000/todo',\r\n        data: newTodo,\r\n      });\r\n\r\n      setTodoList([...todoList, res.data.data]);\r\n      // 여기서 자꾸 리스트가 업데이트 안돼는 오류가 있었는데 알고 보니 컨트롤러에서 데이터를 안넘겨주고 있었음... 실환가..\r\n    };\r\n\r\n    postData();\r\n  };\r\n\r\n  // 체크박스 on/off\r\n  const toggleTodo = (id) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\r\n        return todo.id === id ? { ...todo, done: !todo.done } : todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  //   선택된 체크박스만 삭제\r\n  const removeTodo = (id) => {\r\n    const deleteData = async () => {\r\n      const res = await axios({\r\n        method: 'DELETE',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          id: Number(id),\r\n        },\r\n      });\r\n      // 여기는 왜 res.data로 받아야 하고 위에 모든 데이터를 가져올 때는 res.data.data를 가져와야 하지..\r\n      setTodoList(res.data);\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  //   const updateTodoTitle = (id, newTitle) => {\r\n  //     const patchData = async () => {\r\n  //       const updatedTodoList = todoList.map((todo) => {\r\n  //         if (todo.id === id) {\r\n  //           return { ...todo, title: newTitle };\r\n  //         }\r\n  //         return todo;\r\n  //       });\r\n  //       setTodoList(updatedTodoList);\r\n  //       const res = await axios({\r\n  //         method: 'PATCH',\r\n  //         url: `http://localhost:8000/todo/:${id}`,\r\n  //         data: {\r\n  //           title: newTitle,\r\n  //           id: Number(id),\r\n  //         },\r\n  //       });\r\n  //       console.log(res.data);\r\n  //     };\r\n  //   };\r\n  const updateTodoTitle = async (id, newTitle) => {\r\n    const res = await axios({\r\n      method: 'PATCH',\r\n      url: `http://localhost:8000/todo/:${id}`,\r\n      data: {\r\n        title: newTitle,\r\n        id: Number(id),\r\n      },\r\n    });\r\n\r\n    const updatedTodoList = todoList.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, title: newTitle };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  const handleInputKeyDown = (e, id, newTitle) => {\r\n    if (e.key === 'Enter') {\r\n      updateTodoTitle(id, newTitle);\r\n      setTodoList(\r\n        todoList.map((todo) => {\r\n          return todo.id === id ? { ...todo, done: false } : todo;\r\n        })\r\n      );\r\n      alert('업데이트 되었습니다.');\r\n      setTodoList(doneFalse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input value={inputTodo} onChange={(e) => setInputTodo(e.target.value)} />\r\n      <button onClick={AddTodo}>추가</button>\r\n\r\n      <ul>\r\n        {todoList.map((todo) => {\r\n          return (\r\n            <li key={todo.id}>\r\n              <input type='checkbox' checked={todo.done} onChange={() => toggleTodo(todo.id)} />\r\n              {todo.done === true ? (\r\n                <input\r\n                  type='text'\r\n                  value={todo.title}\r\n                  onChange={(e) => updateTodoTitle(todo.id, e.target.value)}\r\n                  onKeyDown={(e) => handleInputKeyDown(e, todo.id, e.target.value)}\r\n                />\r\n              ) : (\r\n                <input type='text' value={todo.title} readOnly />\r\n              )}\r\n              <button onClick={() => removeTodo(todo.id)}>DELETE</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}