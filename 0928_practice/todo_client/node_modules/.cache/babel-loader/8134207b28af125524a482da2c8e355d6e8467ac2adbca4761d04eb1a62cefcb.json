{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\github\\\\CodingOn-Web\\\\0928_practice\\\\todo_client\\\\src\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputTodo() {\n  _s();\n  const [inputTodo, setInputTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: 'http://localhost:8000/todos'\n      });\n      setTodoList(res.data.data);\n    };\n    getData();\n  }, []);\n  const AddTodo = async () => {\n    const newTodo = {\n      title: inputTodo,\n      done: false\n    };\n    setTodoList([...todoList, newTodo]);\n    const postData = async () => {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:8000/todo',\n        data: newTodo\n      });\n      setInputTodo('');\n      setTodoList([...todoList, res.data.data]);\n    };\n    postData();\n  };\n\n  // 체크박스 on/off\n  const toggleTodo = async id => {\n    const updatedTodoList = todoList.map(todo => todo.id === id ? {\n      ...todo,\n      done: !todo.done\n    } : todo);\n    try {\n      // API를 통해 데이터 업데이트\n      await axios({\n        method: 'PUT',\n        url: `http://localhost:8000/todo/${id}`,\n        data: {\n          done: !todoList.find(todo => todo.id === id).done\n        }\n      });\n\n      // 로컬 상태 업데이트\n      setTodoList(updatedTodoList);\n    } catch (error) {\n      // 오류 처리\n      console.error(error);\n    }\n  };\n\n  //   선택된 체크박스만 삭제\n  const removeTodo = id => {\n    const deleteData = async () => {\n      const res = await axios({\n        method: 'DELETE',\n        url: `http://localhost:8000/todo/:${id}`,\n        data: {\n          id: Number(id)\n        }\n      });\n      console.log('a');\n    };\n    deleteData();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputTodo,\n      onChange: e => setInputTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.done,\n            onChange: () => toggleTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTodo(todo.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputTodo, \"TOcmzs9u7mZzk469sMLH26rcM+o=\");\n_c = InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InputTodo","_s","inputTodo","setInputTodo","todoList","setTodoList","getData","res","method","url","data","AddTodo","newTodo","title","done","postData","toggleTodo","id","updatedTodoList","map","todo","find","error","console","removeTodo","deleteData","Number","log","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/82106/Desktop/github/CodingOn-Web/0928_practice/todo_client/src/InputTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const AddTodo = async () => {\r\n    const newTodo = {\r\n      title: inputTodo,\r\n      done: false,\r\n    };\r\n    setTodoList([...todoList, newTodo]);\r\n\r\n    const postData = async () => {\r\n      const res = await axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:8000/todo',\r\n        data: newTodo,\r\n      });\r\n      setInputTodo('');\r\n      setTodoList([...todoList, res.data.data]);\r\n    };\r\n\r\n    postData();\r\n  };\r\n\r\n  // 체크박스 on/off\r\n  const toggleTodo = async (id) => {\r\n    const updatedTodoList = todoList.map((todo) => (todo.id === id ? { ...todo, done: !todo.done } : todo));\r\n\r\n    try {\r\n      // API를 통해 데이터 업데이트\r\n      await axios({\r\n        method: 'PUT',\r\n        url: `http://localhost:8000/todo/${id}`,\r\n        data: { done: !todoList.find((todo) => todo.id === id).done },\r\n      });\r\n\r\n      // 로컬 상태 업데이트\r\n      setTodoList(updatedTodoList);\r\n    } catch (error) {\r\n      // 오류 처리\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  //   선택된 체크박스만 삭제\r\n  const removeTodo = (id) => {\r\n    const deleteData = async () => {\r\n      const res = await axios({\r\n        method: 'DELETE',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          id: Number(id),\r\n        },\r\n      });\r\n      console.log('a');\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input value={inputTodo} onChange={(e) => setInputTodo(e.target.value)} />\r\n      <button onClick={AddTodo}>추가</button>\r\n\r\n      <ul>\r\n        {todoList.map((todo) => {\r\n          return (\r\n            <li key={todo.id}>\r\n              <input type='checkbox' checked={todo.done} onChange={() => toggleTodo(todo.id)} />\r\n              {todo.title}\r\n              <button onClick={() => removeTodo(todo.id)}>DELETE</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}