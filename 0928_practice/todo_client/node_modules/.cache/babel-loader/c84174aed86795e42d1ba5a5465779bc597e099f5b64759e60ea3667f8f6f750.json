{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\github\\\\CodingOn-Web\\\\0928_practice\\\\todo_client\\\\src\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputTodo() {\n  _s();\n  const [inputTodo, setInputTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: 'http://localhost:8000/todos'\n      });\n      setTodoList(res.data.data);\n    };\n    getData();\n  }, []);\n  const AddTodo = async () => {\n    const newTodo = {\n      title: inputTodo,\n      done: false\n    };\n    const postData = async () => {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:8000/todo',\n        data: newTodo\n      });\n      setInputTodo('');\n      setTodoList([...res.data, newTodo]);\n    };\n    postData();\n  };\n  useEffect(() => {\n    console.log(todoList);\n  }, [todoList.length]);\n  // 체크박스 on/off\n  const toggleTodo = id => {\n    setTodoList(todoList.map(todo => {\n      console.log(todo.id === id);\n      // console.log(todo);\n      // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\n      return todo.id === id ? {\n        ...todo,\n        done: !todo.done\n      } : todo;\n    }));\n  };\n\n  //   선택된 체크박스만 삭제\n  const removeTodo = id => {\n    const deleteData = async () => {\n      const res = await axios({\n        method: 'DELETE',\n        url: `http://localhost:8000/todo/:${id}`,\n        data: {\n          id: Number(id)\n        }\n      });\n      console.log('a');\n    };\n    deleteData();\n  };\n  useEffect(() => {\n    console.log(todoList);\n  }, [todoList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputTodo,\n      onChange: e => setInputTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.done,\n            onChange: () => toggleTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTodo(todo.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputTodo, \"nz4O57+3VQQ9NujAQs0TPkC5SNw=\");\n_c = InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InputTodo","_s","inputTodo","setInputTodo","todoList","setTodoList","getData","res","method","url","data","AddTodo","newTodo","title","done","postData","console","log","length","toggleTodo","id","map","todo","removeTodo","deleteData","Number","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/82106/Desktop/github/CodingOn-Web/0928_practice/todo_client/src/InputTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const AddTodo = async () => {\r\n    const newTodo = {\r\n      title: inputTodo,\r\n      done: false,\r\n    };\r\n\r\n    const postData = async () => {\r\n      const res = await axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:8000/todo',\r\n        data: newTodo,\r\n      });\r\n      setInputTodo('');\r\n      setTodoList([...res.data, newTodo]);\r\n    };\r\n\r\n    postData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(todoList);\r\n  }, [todoList.length]);\r\n  // 체크박스 on/off\r\n  const toggleTodo = (id) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        console.log(todo.id === id);\r\n        // console.log(todo);\r\n        // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\r\n        return todo.id === id ? { ...todo, done: !todo.done } : todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  //   선택된 체크박스만 삭제\r\n  const removeTodo = (id) => {\r\n    const deleteData = async () => {\r\n      const res = await axios({\r\n        method: 'DELETE',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          id: Number(id),\r\n        },\r\n      });\r\n      console.log('a');\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(todoList);\r\n  }, [todoList]);\r\n\r\n  return (\r\n    <>\r\n      <input value={inputTodo} onChange={(e) => setInputTodo(e.target.value)} />\r\n      <button onClick={AddTodo}>추가</button>\r\n\r\n      <ul>\r\n        {todoList.map((todo) => {\r\n          return (\r\n            <li key={todo.id}>\r\n              <input type='checkbox' checked={todo.done} onChange={() => toggleTodo(todo.id)} />\r\n              {todo.title}\r\n              <button onClick={() => removeTodo(todo.id)}>DELETE</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}