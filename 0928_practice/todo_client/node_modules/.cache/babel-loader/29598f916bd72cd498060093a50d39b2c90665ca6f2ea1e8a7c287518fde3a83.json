{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\github\\\\CodingOn-Web\\\\0928_practice\\\\todo_client\\\\src\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InputTodo() {\n  _s();\n  const [inputTodo, setInputTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const todoData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: 'http://localhost:8000/todos'\n      });\n      setTodoList(res.data.data);\n    };\n    todoData();\n  }, []);\n  const AddTodo = () => {\n    const newTodo = {\n      title: inputTodo,\n      done: false\n    };\n    setTodoList([...todoList, newTodo]);\n    setInputTodo('');\n    const todoData = async () => {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:8000/todo',\n        data: newTodo\n      });\n      console.log(res.data.data);\n    };\n    todoData();\n  };\n\n  // 체크박스 on/off\n  const toggleTodo = id => {\n    setTodoList(todoList.map(todo => {\n      // console.log(todo);\n      // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\n      return todo.id === id ? {\n        ...todo,\n        checked: !todo.checked\n      } : todo;\n    }));\n  };\n\n  // 선택된 체크박스만 삭제\n  const removeTodo = () => {\n    const result = todoList.filter(value => value.checked === false);\n    setTodoList(result);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputTodo,\n      onChange: e => setInputTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: value.done,\n            onChange: () => toggleTodo(value.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), value.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeTodo,\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, value.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputTodo, \"TOcmzs9u7mZzk469sMLH26rcM+o=\");\n_c = InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InputTodo","_s","inputTodo","setInputTodo","todoList","setTodoList","todoData","res","method","url","data","AddTodo","newTodo","title","done","console","log","toggleTodo","id","map","todo","checked","removeTodo","result","filter","value","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/82106/Desktop/github/CodingOn-Web/0928_practice/todo_client/src/InputTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n  useEffect(() => {\r\n    const todoData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    todoData();\r\n  }, []);\r\n\r\n  const AddTodo = () => {\r\n    const newTodo = {\r\n      title: inputTodo,\r\n      done: false,\r\n    };\r\n    setTodoList([...todoList, newTodo]);\r\n    setInputTodo('');\r\n    const todoData = async () => {\r\n      const res = await axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:8000/todo',\r\n        data: newTodo,\r\n      });\r\n      console.log(res.data.data);\r\n    };\r\n    todoData();\r\n  };\r\n\r\n  // 체크박스 on/off\r\n  const toggleTodo = (id) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        // console.log(todo);\r\n        // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\r\n        return todo.id === id ? { ...todo, checked: !todo.checked } : todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  // 선택된 체크박스만 삭제\r\n  const removeTodo = () => {\r\n    const result = todoList.filter((value) => value.checked === false);\r\n    setTodoList(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input value={inputTodo} onChange={(e) => setInputTodo(e.target.value)} />\r\n      <button onClick={AddTodo}>추가</button>\r\n\r\n      <ul>\r\n        {todoList.map((value) => {\r\n          return (\r\n            <li key={value.id}>\r\n              <input type='checkbox' checked={value.done} onChange={() => toggleTodo(value.id)} />\r\n              {value.title}\r\n              <button onClick={removeTodo}>DELETE</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC;QACtBa,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE;MACP,CAAC,CAAC;MACFJ,WAAW,CAACE,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;IAC5B,CAAC;IACDJ,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAEX,SAAS;MAChBY,IAAI,EAAE;IACR,CAAC;IACDT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,OAAO,CAAC,CAAC;IACnCT,YAAY,CAAC,EAAE,CAAC;IAChB,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAC;QACtBa,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,4BAA4B;QACjCC,IAAI,EAAEE;MACR,CAAC,CAAC;MACFG,OAAO,CAACC,GAAG,CAACT,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;IAC5B,CAAC;IACDJ,QAAQ,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,MAAMW,UAAU,GAAIC,EAAE,IAAK;IACzBb,WAAW,CACTD,QAAQ,CAACe,GAAG,CAAEC,IAAI,IAAK;MACrB;MACA;MACA,OAAOA,IAAI,CAACF,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGE,IAAI;QAAEC,OAAO,EAAE,CAACD,IAAI,CAACC;MAAQ,CAAC,GAAGD,IAAI;IACpE,CAAC,CACH,CAAC;EACH,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAGnB,QAAQ,CAACoB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACJ,OAAO,KAAK,KAAK,CAAC;IAClEhB,WAAW,CAACkB,MAAM,CAAC;EACrB,CAAC;EAED,oBACE1B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA;MAAO4B,KAAK,EAAEvB,SAAU;MAACyB,QAAQ,EAAGC,CAAC,IAAKzB,YAAY,CAACyB,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EpC,OAAA;MAAQqC,OAAO,EAAEvB,OAAQ;MAAAe,QAAA,EAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErCpC,OAAA;MAAA6B,QAAA,EACGtB,QAAQ,CAACe,GAAG,CAAEM,KAAK,IAAK;QACvB,oBACE5B,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAOsC,IAAI,EAAC,UAAU;YAACd,OAAO,EAAEI,KAAK,CAACX,IAAK;YAACa,QAAQ,EAAEA,CAAA,KAAMV,UAAU,CAACQ,KAAK,CAACP,EAAE;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACnFR,KAAK,CAACZ,KAAK,eACZhB,OAAA;YAAQqC,OAAO,EAAEZ,UAAW;YAAAI,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAHrCR,KAAK,CAACP,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACL,CAAC;AAEP;AAAChC,EAAA,CAnEuBD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}