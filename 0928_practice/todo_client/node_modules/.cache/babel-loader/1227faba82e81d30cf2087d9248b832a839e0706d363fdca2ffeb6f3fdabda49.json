{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82106\\\\Desktop\\\\github\\\\CodingOn-Web\\\\0928_practice\\\\todo_client\\\\src\\\\InputTodo.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useRef } from 'react';\nimport styled from 'styled-components';\n\n//styled-component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst _styledHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 50px;\n  align-items: center;\n  background-color: skyblue;\n`;\nexport default function InputTodo() {\n  _s();\n  const [inputTodo, setInputTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  const inputWriter = useRef();\n\n  //styled-component\n  const styledHeader = styled.header`\n    display: flex;\n    justify-content: center;\n    height: 50px;\n    align-items: center;\n    background-color: skyblue;\n  `;\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios({\n        method: 'GET',\n        url: 'http://localhost:8000/todos'\n      });\n      setTodoList(res.data.data);\n    };\n    getData();\n  }, []);\n  const AddTodo = async () => {\n    const newTodo = {\n      title: inputTodo,\n      done: false\n    };\n    setInputTodo('');\n    const postData = async () => {\n      const res = await axios({\n        method: 'POST',\n        url: 'http://localhost:8000/todo',\n        data: newTodo\n      });\n      setTodoList([...todoList, res.data.data]);\n      // 여기서 자꾸 리스트가 업데이트 안돼는 오류가 있었는데 알고 보니 컨트롤러에서 데이터를 안넘겨주고 있었음... 실환가..\n    };\n\n    postData();\n  };\n\n  // 체크박스 on/off\n  const toggleTodo = id => {\n    setTodoList(todoList.map(todo => {\n      // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\n      return todo.id === id ? {\n        ...todo,\n        done: !todo.done\n      } : todo;\n    }));\n  };\n\n  //   선택된 체크박스만 삭제\n  const removeTodo = id => {\n    const deleteData = async () => {\n      const res = await axios({\n        method: 'DELETE',\n        url: `http://localhost:8000/todo/:${id}`,\n        data: {\n          id: Number(id)\n        }\n      });\n      // 여기는 왜 res.data로 받아야 하고 위에 모든 데이터를 가져올 때는 res.data.data를 가져와야 하지..\n      setTodoList(res.data);\n    };\n    deleteData();\n  };\n  const updateTodoTitle = async (id, newTitle) => {\n    const updatedTodoList = todoList.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          title: newTitle\n        };\n      }\n      return todo;\n    });\n    setTodoList(updatedTodoList);\n  };\n  const handleInputKeyDown = async (e, id, newTitle) => {\n    if (e.key === 'Enter') {\n      const res = await axios({\n        method: 'PATCH',\n        url: `http://localhost:8000/todo/:${id}`,\n        data: {\n          title: newTitle,\n          id: Number(id)\n        }\n      });\n      setTodoList(todoList.map(todo => {\n        return todo.id === id ? {\n          ...todo,\n          done: false\n        } : todo;\n      }));\n      alert('업데이트 되었습니다.');\n      inputWriter.current.focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(_styledHeader, {\n      children: \"My Todo App\\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputWriter,\n      value: inputTodo,\n      onChange: e => setInputTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.done,\n            onChange: () => toggleTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), todo.done === true ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.title,\n            onChange: e => updateTodoTitle(todo.id, e.target.value),\n            onKeyDown: e => handleInputKeyDown(e, todo.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: todo.title,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTodo(todo.id),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(InputTodo, \"hsqIAFropHPbIBAGH5FSVS5LdeQ=\");\n_c = InputTodo;\nvar _c;\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"names":["useState","useEffect","axios","useRef","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","_styledHeader","div","InputTodo","_s","inputTodo","setInputTodo","todoList","setTodoList","inputWriter","styledHeader","header","getData","res","method","url","data","AddTodo","newTodo","title","done","postData","toggleTodo","id","map","todo","removeTodo","deleteData","Number","updateTodoTitle","newTitle","updatedTodoList","handleInputKeyDown","e","key","alert","current","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","value","onChange","target","onClick","type","checked","onKeyDown","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/82106/Desktop/github/CodingOn-Web/0928_practice/todo_client/src/InputTodo.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//styled-component\r\nconst _styledHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 50px;\r\n  align-items: center;\r\n  background-color: skyblue;\r\n`;\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const inputWriter = useRef();\r\n\r\n  //styled-component\r\n  const styledHeader = styled.header`\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 50px;\r\n    align-items: center;\r\n    background-color: skyblue;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const AddTodo = async () => {\r\n    const newTodo = {\r\n      title: inputTodo,\r\n      done: false,\r\n    };\r\n    setInputTodo('');\r\n\r\n    const postData = async () => {\r\n      const res = await axios({\r\n        method: 'POST',\r\n        url: 'http://localhost:8000/todo',\r\n        data: newTodo,\r\n      });\r\n\r\n      setTodoList([...todoList, res.data.data]);\r\n      // 여기서 자꾸 리스트가 업데이트 안돼는 오류가 있었는데 알고 보니 컨트롤러에서 데이터를 안넘겨주고 있었음... 실환가..\r\n    };\r\n\r\n    postData();\r\n  };\r\n\r\n  // 체크박스 on/off\r\n  const toggleTodo = (id) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\r\n        return todo.id === id ? { ...todo, done: !todo.done } : todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  //   선택된 체크박스만 삭제\r\n  const removeTodo = (id) => {\r\n    const deleteData = async () => {\r\n      const res = await axios({\r\n        method: 'DELETE',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          id: Number(id),\r\n        },\r\n      });\r\n      // 여기는 왜 res.data로 받아야 하고 위에 모든 데이터를 가져올 때는 res.data.data를 가져와야 하지..\r\n      setTodoList(res.data);\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  const updateTodoTitle = async (id, newTitle) => {\r\n    const updatedTodoList = todoList.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, title: newTitle };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  const handleInputKeyDown = async (e, id, newTitle) => {\r\n    if (e.key === 'Enter') {\r\n      const res = await axios({\r\n        method: 'PATCH',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          title: newTitle,\r\n          id: Number(id),\r\n        },\r\n      });\r\n      setTodoList(\r\n        todoList.map((todo) => {\r\n          return todo.id === id ? { ...todo, done: false } : todo;\r\n        })\r\n      );\r\n      alert('업데이트 되었습니다.');\r\n      inputWriter.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <_styledHeader>My Todo App🔥</_styledHeader>\r\n\r\n      <input ref={inputWriter} value={inputTodo} onChange={(e) => setInputTodo(e.target.value)} />\r\n      <button onClick={AddTodo}>추가</button>\r\n      <ul>\r\n        {todoList.map((todo) => {\r\n          return (\r\n            <li key={todo.id}>\r\n              <input type='checkbox' checked={todo.done} onChange={() => toggleTodo(todo.id)} />\r\n              {todo.done === true ? (\r\n                <input\r\n                  type='text'\r\n                  value={todo.title}\r\n                  onChange={(e) => updateTodoTitle(todo.id, e.target.value)}\r\n                  onKeyDown={(e) => handleInputKeyDown(e, todo.id, e.target.value)}\r\n                />\r\n              ) : (\r\n                <input type='text' value={todo.title} readOnly />\r\n              )}\r\n              <button onClick={() => removeTodo(todo.id)}>DELETE</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}