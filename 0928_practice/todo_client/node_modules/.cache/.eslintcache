[{"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\index.js":"1","C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\App.js":"2","C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\InputTodo.js":"3","C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\EmptyList.js":"4","C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\emptyList.js":"5"},{"size":240,"mtime":1695886913717,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1696319863378,"results":"8","hashOfConfig":"7"},{"size":6074,"mtime":1696319755867,"results":"9","hashOfConfig":"7"},{"size":427,"mtime":1696317316697,"results":"10","hashOfConfig":"7"},{"size":427,"mtime":1696317316697,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1ia2n4c",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\index.js",[],[],["30"],"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\App.js",[],[],"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\InputTodo.js",["31","32","33","34","35","36","37","38","39","40","41","42"],[],"import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport EmptyList from './EmptyList';\r\n\r\n//styled-component\r\nconst _wrapperBox = styled.div`\r\n  margin: 0 auto;\r\n  width: 35%;\r\n  background-color: white;\r\n  height: 100%;\r\n`;\r\n\r\nconst _styledHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 50px;\r\n  align-items: center;\r\n  background-color: skyblue;\r\n  color: white;\r\n`;\r\n\r\nconst _styledInput = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid skyblue;\r\n  padding-bottom: 5px;\r\n  width: 85%;\r\n  outline: none;\r\n  margin-right: 20px;\r\n  margin-left: 7px;\r\n`;\r\n\r\nconst _addButton = styled.button`\r\n  width: 6%;\r\n  border: none;\r\n  background-color: #eee;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst _inputDiv = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  padding: 10px;\r\n`;\r\n\r\nconst _todoLengthDiv = styled.div`\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst _ulTag = styled.ul`\r\n  list-style: none;\r\n  padding: 0px 10px;\r\n  margin: 0px;\r\n`;\r\n\r\nconst _liTag = styled.li`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport default function InputTodo() {\r\n  const [inputTodo, setInputTodo] = useState('');\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const inputWriter = useRef();\r\n  const updateInput = useRef([]);\r\n\r\n  // 처음 실행시 모든 데이터 불러오기\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await axios({\r\n        method: 'GET',\r\n        url: 'http://localhost:8000/todos',\r\n      });\r\n      setTodoList(res.data.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  // 할일 추가 함수\r\n  const AddTodo = async () => {\r\n    // 빈값이 아닐 떄만 추가\r\n    if (inputTodo !== '') {\r\n      const newTodo = {\r\n        title: inputTodo,\r\n        done: false,\r\n      };\r\n      setInputTodo('');\r\n\r\n      const postData = async () => {\r\n        const res = await axios({\r\n          method: 'POST',\r\n          url: 'http://localhost:8000/todo',\r\n          data: newTodo,\r\n        });\r\n        // 여기서 자꾸 리스트가 업데이트 안돼는 오류가 있었는데 알고 보니 컨트롤러에서 데이터를 안넘겨주고 있었음... 실환가..\r\n        setTodoList([...todoList, res.data.data]);\r\n      };\r\n\r\n      postData();\r\n    } else {\r\n      // 빈값이면 input에 포커스 하기\r\n      inputWriter.current.focus();\r\n    }\r\n  };\r\n\r\n  // 체크박스 on/off\r\n  const toggleTodo = (id) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        // 내가 체크한 박스의 id가 todos에 있는 id와 동일하다면 todo의 나머지 요소는 변하지 않고 checked요소만 반대로 해준다.\r\n        return todo.id === id ? { ...todo, done: !todo.done } : todo;\r\n      })\r\n    );\r\n    // updateInput.id.current.focus();\r\n  };\r\n\r\n  //   선택된 체크박스만 삭제\r\n  const removeTodo = (id) => {\r\n    const deleteData = async () => {\r\n      const res = await axios({\r\n        method: 'DELETE',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          id: Number(id),\r\n        },\r\n      });\r\n      // 여기는 왜 res.data로 받아야 하고 위에 모든 데이터를 가져올 때는 res.data.data를 가져와야 하지..\r\n      setTodoList(res.data);\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // 수정된 리스트 업데이트 해주는 함수\r\n  const updateTodoTitle = async (id, newTitle) => {\r\n    const updatedTodoList = todoList.map((todo) => {\r\n      if (todo.id === id) {\r\n        return { ...todo, title: newTitle };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  // 엔터키 눌렀을 때 수정사항 업데이트\r\n  const handleInputKeyDown = async (e, id, newTitle) => {\r\n    if (e.key === 'Enter') {\r\n      const res = await axios({\r\n        method: 'PATCH',\r\n        url: `http://localhost:8000/todo/:${id}`,\r\n        data: {\r\n          title: newTitle,\r\n          id: Number(id),\r\n        },\r\n      });\r\n      setTodoList(\r\n        todoList.map((todo) => {\r\n          return todo.id === id ? { ...todo, done: false } : todo;\r\n        })\r\n      );\r\n      alert('업데이트 되었습니다.');\r\n      inputWriter.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <_wrapperBox>\r\n      <_styledHeader>My Todo App🔥</_styledHeader>\r\n\r\n      <_inputDiv>\r\n        <_styledInput\r\n          ref={inputWriter}\r\n          value={inputTodo}\r\n          onChange={(e) => setInputTodo(e.target.value)}\r\n          placeholder='Add Todo here'\r\n        />\r\n        <_addButton onClick={AddTodo}>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </_addButton>\r\n      </_inputDiv>\r\n\r\n      <_todoLengthDiv>✏️{todoList.length} Todos</_todoLengthDiv>\r\n      {todoList.length !== 0 ? (\r\n        <_ulTag>\r\n          {todoList.map((todo) => {\r\n            return (\r\n              <_liTag key={todo.id}>\r\n                <input type='checkbox' checked={todo.done} onChange={() => toggleTodo(todo.id)} />\r\n                {todo.done === true ? (\r\n                  <_styledInput\r\n                    type='text'\r\n                    value={todo.title}\r\n                    ref={(value) => (updateInput.current[todo.id] = value)}\r\n                    onChange={(e) => updateTodoTitle(todo.id, e.target.value)}\r\n                    onKeyDown={(e) => handleInputKeyDown(e, todo.id, e.target.value)}\r\n                  />\r\n                ) : (\r\n                  <_styledInput type='text' value={todo.title} readOnly />\r\n                )}\r\n                <_addButton onClick={() => removeTodo(todo.id)}>\r\n                  <FontAwesomeIcon icon={faTrashCan} />\r\n                </_addButton>\r\n              </_liTag>\r\n            );\r\n          })}\r\n        </_ulTag>\r\n      ) : (\r\n        <EmptyList />\r\n      )}\r\n    </_wrapperBox>\r\n  );\r\n}\r\n",["43"],"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\EmptyList.js",["44","45","46"],[],"C:\\Users\\82106\\Desktop\\github\\CodingOn-Web\\0928_practice\\todo_client\\src\\emptyList.js",[],[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":154,"column":13,"nodeType":"51","messageId":"52","endLine":154,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":173,"column":5,"nodeType":"55","messageId":"56","endLine":173,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":174,"column":7,"nodeType":"55","messageId":"56","endLine":174,"endColumn":22},{"ruleId":"53","severity":1,"message":"58","line":176,"column":7,"nodeType":"55","messageId":"56","endLine":176,"endColumn":18},{"ruleId":"53","severity":1,"message":"59","line":177,"column":9,"nodeType":"55","messageId":"56","endLine":182,"endColumn":11},{"ruleId":"53","severity":1,"message":"60","line":183,"column":9,"nodeType":"55","messageId":"56","endLine":183,"endColumn":39},{"ruleId":"53","severity":1,"message":"61","line":188,"column":7,"nodeType":"55","messageId":"56","endLine":188,"endColumn":23},{"ruleId":"53","severity":1,"message":"62","line":190,"column":9,"nodeType":"55","messageId":"56","endLine":190,"endColumn":17},{"ruleId":"53","severity":1,"message":"63","line":193,"column":15,"nodeType":"55","messageId":"56","endLine":193,"endColumn":37},{"ruleId":"53","severity":1,"message":"59","line":196,"column":19,"nodeType":"55","messageId":"56","endLine":202,"endColumn":21},{"ruleId":"53","severity":1,"message":"59","line":204,"column":19,"nodeType":"55","messageId":"56","endLine":204,"endColumn":75},{"ruleId":"53","severity":1,"message":"60","line":206,"column":17,"nodeType":"55","messageId":"56","endLine":206,"endColumn":65},{"ruleId":"47","replacedBy":"64"},{"ruleId":"49","severity":1,"message":"65","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"66","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"67","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":35},"no-new-object",["68"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component _wrapperBox must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component _styledHeader must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _inputDiv must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _styledInput must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _addButton must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _todoLengthDiv must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ulTag must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _liTag must be in PascalCase or SCREAMING_SNAKE_CASE",["68"],"'FontAwesomeIcon' is defined but never used.","'faLaughBeam' is defined but never used.","Imported JSX component _imgBox must be in PascalCase or SCREAMING_SNAKE_CASE","no-object-constructor"]