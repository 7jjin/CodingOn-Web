<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
</head>

<body>
    <h1>투표 하기</h1>
    <div>
        <button id="typeOne">A타입</button>
        <button id="typeTwo">B타입</button>
    </div>
    <div>
        <h3>투표 결과</h3>
        <p>A타입: <span id="resultOne">0</span></p>
        <p>B타입: <span id="resultTwo">0</span></p>
    </div>

    <script>
        const socket = new WebSocket('ws://localhost:8000');
        const button_a = document.querySelector("#typeOne");
        const button_b = document.querySelector("#typeTwo");
        const result_a = document.querySelector("#resultOne");
        const result_b = document.querySelector("#resultTwo");
        //서버에 연결 요청
        socket.addEventListener('open', (event) => {
            //send() 함수는 백엔드로 메세지를 전송
            console.log('서버에 연결되었습니다');
        });
        //메세지 주고 받음
        socket.addEventListener('message', (event) => {
            console.log("event.data", event.data)
            const parse = JSON.parse(event.data);       //6. 서버에서 보내준 데이터를 파싱한다.
            result_a.textContent = parse.typeOne;       //7. 각각의 textContent를 업데이트 해준다.
            result_b.textContent = parse.typeTwo;
        });
        //오류이벤트
        socket.addEventListener('error', (event) => {
            console.log('오류가 발생하였습니다', event.error);
        });

        //종료이벤트
        socket.addEventListener('close', () => {
            console.log('서버와 연결이 종료됨');
        });


        ///////////////////
        button_a.addEventListener("click", (evnet) => {
            socket.send(JSON.stringify({
                vote: "typeOne"     // 1. typeOne버튼을 누르면 서버에 {vote:"typeOne"} 이라는 객체가 보내진다.
            }));
        })
        button_b.addEventListener("click", (evnet) => {
            socket.send(JSON.stringify({
                vote: "typeTwo"
            }));
        })


    </script>
</body>

</html>