<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <h1>FORM 싱글 연습</h1>
    <form action="/upload" method="post" enctype="multipart/form-data">
        <input type="file" name="userfile" /><br>
        <input type="text" name="title"><br>
        <button type="submit">업로드</button>
    </form>
    <h1>Form 멀티 연습(ver1)</h1>
    <form action="/upload/array" method="post" enctype="multipart/form-data">
        <!-- 파일 여러개 보낼 때는 multiple을 넣어줘야 한다. 꼭! -->
        <input type="file" name="userfiles" multiple /><br>
        <input type="text" name="title"><br>
        <button type="submit">업로드</button>
    </form>


    <h1>Form 멀티 연습(ver2)</h1>
    <form action="/upload/fields" method="post" enctype="multipart/form-data">
        <!-- 파일 여러개 보낼 때는 multiple을 넣어줘야 한다. 꼭! -->
        <input type="file" name="userfile1" /><br>
        <input type="text" name="title1"><br>
        <input type="file" name="userfile2" /><br>
        <input type="text" name="title2"><br>
        <button type="submit">업로드</button>
    </form>


    <h1>동적 파일 업로드</h1>
    <input type="file" id="dynamic-file"><br>
    <input type="text" id="title"><br>
    <button type="button" onclick="fileupload()">업로드</button>
    <br>
    <div class="result"></div>

    <script>
        const resultBox = document.querySelector(".result");
        function fileupload() {
            const file = document.getElementById("dynamic-file");
            console.log(file.files[0]);
            const title = document.querySelector("#title");

            // 폼 전송 보낼 때 파일은 가장 나중에 보내야 한다. 필수!
            const formData = new FormData()
            formData.append("title", title.value)
            formData.append('dynamic-file', file.files[0]);

            axios({
                method: "POST",
                url: "/dynamicFile",
                data: formData,
                headers: {
                    "Content-Type": "multipart/form-data"
                } // 쓰는 이유 : 백엔드에서 enctype="multipart/form-data"라고 지정해줬기 때문에
            }).then(res => {
                console.log('res', res);
                resultBox.innerHTML = `<div><img src=${res.data.path} width=100px heigth=100px ></div>`
            })
        }
    </script>

</body>

</html>